{"version":3,"sources":["components/AddCard.js","components/Card.js","components/AllCards.js","components/Header.js","App.js","reportWebVitals.js","index.js"],"names":["AddCard","onAdd","useState","name","setName","cardNumber","setCardNumber","limit","setLimit","className","onSubmit","e","preventDefault","alert","type","placeholder","value","onChange","target","Card","card","balance","AllCards","cards","map","index","Header","App","setCards","useEffect","a","fetchCards","cardsFromServer","getCards","fetch","res","json","data","addCard","console","log","JSON","stringify","method","headers","body","length","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uOAmEeA,EAjEC,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAAY,EACLC,mBAAS,IADJ,mBACtBC,EADsB,KAChBC,EADgB,OAEOF,mBAAS,IAFhB,mBAEtBG,EAFsB,KAEVC,EAFU,OAGHJ,mBAAS,IAHN,mBAGtBK,EAHsB,KAGfC,EAHe,KA8B7B,OACE,uBAAMC,UAAU,WAAWC,SA1BZ,SAACC,GAChBA,EAAEC,iBAEGT,EAKAE,EAKAE,GAKLN,EAAM,CAAEE,OAAME,aAAYE,UAE1BH,EAAQ,IACRE,EAAc,IACdE,EAAS,KARLK,MAAM,uBALNA,MAAM,6BALRA,MAAM,uBAsBR,UACE,sBAAKJ,UAAU,eAAf,UACE,yCACA,uBACEK,KAAK,OACLC,YAAY,0BACZC,MAAOb,EACPc,SAAU,SAACN,GAAD,OAAOP,EAAQO,EAAEO,OAAOF,aAGtC,sBAAKP,UAAU,eAAf,UACE,gDACA,uBACEK,KAAK,SACLC,YAAY,4BACZC,MAAOX,EACPY,SAAU,SAACN,GAAD,OAAOL,EAAcK,EAAEO,OAAOF,aAG5C,sBAAKP,UAAU,kCAAf,UACE,0CACA,uBACEK,KAAK,OACLC,YAAY,YACZC,MAAOT,EACPU,SAAU,SAACN,GAAD,OAAOH,EAASG,EAAEO,OAAOF,aAIvC,uBAAOF,KAAK,SAASE,MAAM,MAAMP,UAAU,sBCnDlCU,EAXF,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACZ,OACE,gCACE,+BAAKA,EAAKjB,KAAM,OAChB,+BAAKiB,EAAKf,WAAY,OACtB,+BAAKe,EAAKC,QAAS,OACnB,+BAAKD,EAAKb,MAAO,WCMVe,EAVE,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAClB,OACE,mCACGA,EAAMC,KAAI,SAACJ,EAAMK,GAAP,OACT,cAAC,EAAD,CAAkBL,KAAMA,GAAbK,SCEJC,EARA,WACb,OACE,iCACE,uDC6CSC,MA3Cf,WAAgB,IAAD,EACazB,mBAAS,IADtB,mBACNqB,EADM,KACCK,EADD,KAGbC,qBAAU,YACM,uCAAG,4BAAAC,EAAA,sEACeC,IADf,OACTC,EADS,OAEfJ,EAASI,GAFM,2CAAH,qDAKdC,KACC,IAGH,IAAMF,EAAU,uCAAG,8BAAAD,EAAA,sEACCI,MAAM,8BADP,cACXC,EADW,gBAEEA,EAAIC,OAFN,cAEXC,EAFW,yBAIVA,GAJU,2CAAH,qDAQVC,EAAO,uCAAG,WAAOlB,GAAP,iBAAAU,EAAA,6DACdS,QAAQC,IAAIC,KAAKC,UAAUtB,IADb,SAEIc,MAAM,iCAAkC,CACxDS,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMJ,KAAKC,UAAUtB,KALT,cAERe,EAFQ,gBAQKA,EAAIC,OART,OAQRC,EARQ,OAUdT,EAAS,GAAD,mBAAKL,GAAL,CAAYc,KAVN,2CAAH,sDAab,OACE,sBAAK5B,UAAU,MAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,CAAUR,MAAOqC,IACff,EAAMuB,OAAS,EAAK,cAAC,EAAD,CAAUvB,MAAOA,IAAc,eC/B5CwB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.ee92c746.chunk.js","sourcesContent":["import { useState } from 'react'\n\nconst AddCard = ({ onAdd }) => {\n  const [name, setName] = useState('')\n  const [cardNumber, setCardNumber] = useState('')\n  const [limit, setLimit] = useState('')\n\n  const onSubmit = (e) => {\n    e.preventDefault()\n\n    if (!name) {\n      alert('Please enter name!')\n      return\n    }\n\n    if (!cardNumber) {\n        alert('Please enter card number!')\n        return\n    }\n\n    if (!limit) {\n        alert('Please enter limit!')\n        return\n    }\n\n    onAdd({ name, cardNumber, limit })\n\n    setName('')\n    setCardNumber('')\n    setLimit('')\n  }\n\n  return (\n    <form className='add-form' onSubmit={onSubmit}>\n      <div className='form-control'>\n        <label>Name</label>\n        <input\n          type='text'\n          placeholder='e.g. Muhammed Salaudeen'\n          value={name}\n          onChange={(e) => setName(e.target.value)}\n        />\n      </div>\n      <div className='form-control'>\n        <label>Card Number</label>\n        <input\n          type='number'\n          placeholder='e.g. 00001111222233334444'\n          value={cardNumber}\n          onChange={(e) => setCardNumber(e.target.value)}\n        />\n      </div>\n      <div className='form-control form-control-check'>\n        <label>Limit</label>\n        <input\n          type='text'\n          placeholder='e.g. 5000'\n          value={limit}\n          onChange={(e) => setLimit(e.target.value)}\n        />\n      </div>\n\n      <input type='submit' value='Add' className='btn btn-block' />\n    </form>\n  )\n}\n\nexport default AddCard","const Card = ({ card }) => {\n    return (\n      <div>\n        <h3>{card.name}{' '}</h3>\n        <h3>{card.cardNumber}{' '}</h3>\n        <h3>{card.balance}{' '}</h3>\n        <h3>{card.limit}{' '}</h3>\n      </div>\n    )\n  }\n  \nexport default Card","import Card from './Card'\n\nconst AllCards = ({ cards }) => {\n  return (\n    <>\n      {cards.map((card, index) => (\n        <Card key={index} card={card} />\n      ))}\n    </>\n  )\n}\n\nexport default AllCards","const Header = () => {\n  return (\n    <header>\n      <h1>Credit Card System</h1>\n    </header>\n  )\n}\n\nexport default Header\n","import { useState, useEffect } from 'react'\nimport AddCard from \"./components/AddCard\";\nimport AllCards from './components/AllCards';\nimport Header from \"./components/Header\";\n\nfunction App() {\n  const [cards, setCards] = useState([])\n\n  useEffect(() => {\n    const getCards = async () => {\n      const cardsFromServer = await fetchCards()\n      setCards(cardsFromServer)\n    }\n\n    getCards()\n  }, [])\n\n  // Fetch Cards\n  const fetchCards = async () => {\n    const res = await fetch('http://localhost:9000/card')\n    const data = await res.json()\n\n    return data\n  }\n\n  // Add Card\n  const addCard = async (card) => {\n    console.log(JSON.stringify(card))\n    const res = await fetch('http://localhost:9000/card/new', {\n      method: 'POST',\n      headers: { 'Content-type': 'application/json' },\n      body: JSON.stringify(card),\n    })\n\n    const data = await res.json()\n\n    setCards([...cards, data])\n  }\n\n  return (\n    <div className=\"App\">\n      <Header />\n      <AddCard  onAdd={addCard} />\n      { cards.length > 0 ? (<AllCards cards={cards} />) : ('No Cards') }\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}