{"version":3,"sources":["components/AddCard.js","components/Card.js","components/AllCards.js","components/Header.js","App.js","reportWebVitals.js","index.js"],"names":["AddCard","onAdd","useState","name","setName","cardNumber","setCardNumber","limit","setLimit","className","onSubmit","e","preventDefault","alert","type","placeholder","value","onChange","target","Card","card","balance","AllCards","cards","map","index","Header","App","setCards","useEffect","a","fetchCards","cardsFromServer","data","getCards","fetch","res","json","addCard","method","headers","body","JSON","stringify","length","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.019cea5e.chunk.js","sourcesContent":["import { useState } from 'react'\n\nconst AddCard = ({ onAdd }) => {\n  const [name, setName] = useState('')\n  const [cardNumber, setCardNumber] = useState('')\n  const [limit, setLimit] = useState('')\n\n  const onSubmit = (e) => {\n    e.preventDefault()\n\n    if (!name) {\n      alert('Please enter name!')\n      return\n    }\n\n    if (!cardNumber) {\n        alert('Please enter card number!')\n        return\n    }\n\n    if (!limit) {\n        alert('Please enter limit!')\n        return\n    }\n\n    onAdd({ name, cardNumber, limit })\n\n    setName('')\n    setCardNumber('')\n    setLimit('')\n  }\n\n  return (\n    <form className='row align-items-start' onSubmit={onSubmit}>\n      <div className='form-control'>\n        <label className='form-label'>Name</label>\n        <input\n          type='text'\n          placeholder='e.g. Muhammed Salaudeen'\n          value={name}\n          className='form-control'\n          onChange={(e) => setName(e.target.value)}\n        />\n      </div>\n      <div className='form-control'>\n        <label className='form-label'>Card Number</label>\n        <input\n          type='number'\n          placeholder='e.g. 00001111222233334444'\n          value={cardNumber}\n          className='form-control'\n          onChange={(e) => setCardNumber(e.target.value)}\n        />\n      </div>\n      <div className='form-control form-control-check'>\n        <label className='form-label'>Limit</label>\n        <input\n          type='text'\n          placeholder='e.g. 5000'\n          value={limit}\n          className='form-control'\n          onChange={(e) => setLimit(e.target.value)}\n        />\n      </div>\n\n      <input type='submit' value='Add' className='btn btn-secondary' />\n    </form>\n  )\n}\n\nexport default AddCard","const Card = ({ card }) => {\n    return (\n      <tr className=\"table-light\">\n        <td className=\"table-light\">{card.name}{' '}</td>\n        <td className=\"table-light\">{card.cardNumber}{' '}</td>\n        <td className=\"table-light\">£{card.balance}{' '}</td>\n        <td className=\"table-light\">£{card.limit}{' '}</td>\n      </tr>\n    )\n  }\n  \nexport default Card","import Card from './Card'\n\nconst AllCards = ({ cards }) => {\n  return (\n    <div className='row align-items-start'>\n      <h1>Existing Cards</h1>\n      <table className='table-secondary table-striped'>\n        <tr className=\"table-secondary\">\n          <th className=\"table-secondary\">Name</th>\n          <th className=\"table-secondary\">Card Number</th>\n          <th className=\"table-secondary\">Balance</th>\n          <th className=\"table-secondary\">Limit</th>\n        </tr>\n        {cards.map((card, index) => (\n          <Card key={index} card={card} />\n        ))}\n      </table>\n    </div> \n  )\n}\n\nexport default AllCards","const Header = () => {\n  return (\n    <header>\n      <h1>Credit Card System</h1>\n    </header>\n  )\n}\n\nexport default Header\n","import { useState, useEffect } from 'react'\nimport AddCard from \"./components/AddCard\";\nimport AllCards from './components/AllCards';\nimport Header from \"./components/Header\";\nimport './index.css';\n\nfunction App() {\n  const [cards, setCards] = useState([])\n\n  useEffect(() => {\n    const getCards = async () => {\n      const cardsFromServer = await fetchCards()\n      setCards(cardsFromServer.data)\n    }\n\n    getCards()\n  }, [])\n\n  // Fetch Cards\n  const fetchCards = async () => {\n    const res = await fetch('http://localhost:9000/card')\n    const data = await res.json()\n\n    return data\n  }\n\n  // Add Card\n  const addCard = async (card) => {\n    const res = await fetch('http://localhost:9000/card/new', {\n      method: 'POST',\n      headers: { 'Content-type': 'application/json' },\n      body: JSON.stringify(card),\n    })\n\n    const data = await res.json()\n\n    setCards([...cards, data.data])\n  }\n\n  return (\n    <div className=\"container\">\n      <Header />\n      <p></p>\n      <p></p>\n      <AddCard  onAdd={addCard} />\n      { cards.length > 0 ? (<AllCards cards={cards} />) : ('No Cards') }\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}